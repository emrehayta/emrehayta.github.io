[{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/tags/aws/","section":"Tags","summary":"","title":"AWS","type":"tags"},{"content":" Introduction # Amazon Web Services (AWS) is one of the leading cloud platforms, offering a wide range of services that allow businesses and developers to build, manage, and scale applications. For beginners, AWS can seem overwhelming at first, with over 200 different services to choose from. In this post, I’ll give you an overview of some commonly used AWS services and share useful tips for getting started.\nCommonly Used AWS Services # 1. Amazon EC2 (Elastic Compute Cloud) # What is it? EC2 provides scalable virtual servers in the cloud. You can choose from various instance types optimized for different workloads. When to use it? If you want to host your own applications or websites, EC2 gives you the flexibility to create and manage servers. 2. Amazon S3 (Simple Storage Service) # What is it? S3 is an object storage service ideal for storing large amounts of data like backups, images, or videos. When to use it? If you need secure, scalable storage. S3 is often used for backups and hosting static websites. 3. Amazon RDS (Relational Database Service) # What is it? RDS is a managed database service supporting multiple relational database engines like MySQL, PostgreSQL, and MariaDB. When to use it? If you need a relational database for your application but don’t want the hassle of managing it yourself. 4. Amazon Lambda # What is it? Lambda allows you to run code without managing servers. You only pay for the time your code is actually running. When to use it? When you want to build serverless applications or execute small, event-driven tasks. 5. Amazon CloudFront # What is it? CloudFront is a Content Delivery Network (CDN) that speeds up the delivery of content by caching copies at multiple locations globally. When to use it? If you have a global user base and want to optimize your website or app’s load times. 6. AWS IAM (Identity and Access Management) # What is it? IAM allows you to manage users, groups, and their permissions within AWS. When to use it? To ensure the security and access control of your AWS resources. Tips for Beginners # 1. Take Advantage of the AWS Free Tier # AWS offers a free tier for many services, allowing you to explore AWS without incurring extra costs. Be mindful that the free tier is limited in terms of time and usage.\n2. Learn the Basics of IAM # Security should be your top priority. Make sure you understand how IAM works to keep your AWS resources safe from unauthorized access.\n3. Utilize the Documentation and Tutorials # AWS provides comprehensive documentation and step-by-step tutorials. These resources are especially helpful for beginners looking to get familiar with specific services.\n4. Automate with AWS CLI and CloudFormation # For repeatable tasks, you can use the AWS Command Line Interface (CLI) or Infrastructure as Code (IaC) tools like AWS CloudFormation to automate your infrastructure.\n5. Set Up Budget Alarms # AWS offers flexible pricing models, but costs can quickly add up. Set budget alarms to keep track of your spending and avoid surprises.\nConclusion # Getting started with AWS can be challenging, but with the right resources and a clear focus, you can quickly gain momentum. The AWS services introduced here are some of the most commonly used by beginners. By familiarizing yourself with these and following the tips outlined, you\u0026rsquo;ll be well on your way to working successfully with AWS.\nHave any questions or want to learn more about specific services? Feel free to contact me!\n","date":"25 September 2024","externalUrl":null,"permalink":"/posts/aws-beginner-guide/","section":"Posts","summary":"","title":"AWS for Beginners: A Comprehensive Guide to Common Services and Essential Tips","type":"posts"},{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/tags/cloud/","section":"Tags","summary":"","title":"Cloud","type":"tags"},{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/tags/cloudfront/","section":"Tags","summary":"","title":"Cloudfront","type":"tags"},{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/tags/ec2/","section":"Tags","summary":"","title":"EC2","type":"tags"},{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/","section":"emr3.me","summary":"","title":"emr3.me","type":"page"},{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/tags/lambda/","section":"Tags","summary":"","title":"Lambda","type":"tags"},{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/tags/rds/","section":"Tags","summary":"","title":"RDS","type":"tags"},{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/tags/s3/","section":"Tags","summary":"","title":"S3","type":"tags"},{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"20 September 2024","externalUrl":null,"permalink":"/tags/blogging/","section":"Tags","summary":"","title":"Blogging","type":"tags"},{"content":"","date":"20 September 2024","externalUrl":null,"permalink":"/tags/github-pages/","section":"Tags","summary":"","title":"GitHub Pages","type":"tags"},{"content":" Introduction # In today\u0026rsquo;s fast-paced digital world, having your own blog is a great way to share knowledge, experiences, and ideas. In this guide, I will show you how to set up a static website using Hugo and host it for free on GitHub Pages. Hugo is a fast and flexible static site generator, and GitHub Pages makes it easy to host the site directly from your GitHub repository.\nBy the end of this guide, you will have a fully functional blog running on Hugo and deployed through GitHub Pages.\nWhat is Hugo? # Hugo is a powerful and fast Static Site Generator (SSG). It allows you to create websites that are completely static, which makes them fast, secure, and easy to host. With Hugo, you can write content in Markdown and easily customize your site\u0026rsquo;s design using templates and themes.\nWhy GitHub Pages? # GitHub Pages is a hosting service from GitHub that lets you publish websites directly from a GitHub repository. It\u0026rsquo;s particularly useful for projects, personal blogs, and documentation. The integration with GitHub makes it easy to manage changes and keep your site up to date.\nPrerequisites # Before we get started, make sure you have the following installed on your system:\nGit Hugo GitHub Account Step 1: Setting Up Your Hugo Site # First, create a new Hugo site on your local machine. Navigate to the directory where you want to store your blog files and run the following commands:\nhugo new site my-blog cd my-blog This will create the structure of your Hugo site in a directory called my-blog. Next, you\u0026rsquo;ll need to add a theme. In this case, let\u0026rsquo;s use the popular \u0026ldquo;Blowfish\u0026rdquo; theme. Run:\ngit init git submodule add https://github.com/nunocoracao/blowfish.git themes/blowfish echo \u0026#39;theme = \u0026#34;blowfish\u0026#34;\u0026#39; \u0026gt;\u0026gt; config.toml Step 2: Create Your First Blog Post # Now that the site structure is ready, create your first blog post by running:\nhugo new posts/my-first-post.md This will generate a new Markdown file for your post inside the content/posts/ directory. You can edit this file with your favorite text editor and add the content for your first post.\nStep 3: Preview Your Site Locally # Before deploying your blog, you can preview it locally to see how it looks. In the root directory of your Hugo project, run:\nhugo server -D Open a browser and go to http://localhost:1313/ to see your site in action.\nStep 4: Preparing for Deployment to GitHub Pages # Now it’s time to deploy your blog to GitHub Pages.\n4.1 Create a GitHub Repository # Go to GitHub and create a new repository. You can name it .github.io to use it for GitHub Pages. If you want to host it on a subdomain, you can use another name like my-blog.\n4.2 Build the Static Site manually # Run the following command to build your site:\nhugo --minify --themesDir ../.. -d docs --baseURL https://username.github.io/ This will create a docs/ directory with all the static files of your site.\n4.3 Push to Github # cd my-blog git init git remote add origin https://github.com/\u0026lt;username\u0026gt;/\u0026lt;repository\u0026gt;.git git add . git commit -m \u0026#34;Initial commit\u0026#34; git push -u origin main Step 5: Automating the Build with GitHub Actions # Instead of manually building and deploying your site every time you make a change, you can automate this process with GitHub Actions.\n5.1 Create the GitHub Action Workflow # In the root directory of your project (not the docs folder), create a directory called .github/workflows (if it does not exist already):\nmkdir -p .github/workflows Create a new file inside the workflows directory called gh-pages.yml and add the following content (adjust the URL):\ngh-pages.yml # Sample workflow for building and deploying a Hugo site to GitHub Pages name: Blowfish Docs Deploy on: # Runs on pushes targeting the default branch push: branches: [\u0026#34;main\u0026#34;] # # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages permissions: contents: read pages: write id-token: write # Allow one concurrent deployment concurrency: group: \u0026#34;pages\u0026#34; cancel-in-progress: true # Default to bash defaults: run: shell: bash jobs: # Build job build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.102.3 steps: - name: Install Hugo CLI run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.deb \\ \u0026amp;\u0026amp; sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Checkout uses: actions/checkout@v4 with: submodules: recursive - name: Setup Pages id: pages uses: actions/configure-pages@v5 - name: Build with Hugo env: HUGO_ENVIRONMENT: production HUGO_ENV: production run: | hugo --minify --themesDir ../.. -d docs --baseURL https://username.github.io/ echo \u0026#34;Build completed\u0026#34; ls -la docs - name: Upload artifact uses: actions/upload-pages-artifact@v3 with: path: ./docs # Deployment job deploy: environment: name: github-pages url: https://emrehayta.github.io/ runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v4 5.2 Commit the Workflow # Commit and push the workflow file to your repository:\ngit add .github/workflows/gh-pages.yml git commit -m \u0026#34;Add GitHub Actions workflow for Hugo\u0026#34; git push origin main Step 6: Configure GitHub Pages # In your GitHub repository, go to Settings Scroll down to the GitHub Pages section. Under Source, select the docs/ folder in our case (depending on your setup) Save the settings, and your site will be live! Conclusion # Congratulations! You\u0026rsquo;ve successfully set up a blog using Hugo and GitHub Pages. From here, you can continue customizing your theme, adding posts, and growing your site. Hugo and GitHub Pages offer a great, scalable way to maintain a static blog with minimal costs and maximum flexibility.\nHappy blogging!\n","date":"20 September 2024","externalUrl":null,"permalink":"/posts/hugo-article/","section":"Posts","summary":"","title":"Guide to Setting Up a Blog with Hugo and GitHub Pages","type":"posts"},{"content":"","date":"20 September 2024","externalUrl":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo","type":"tags"},{"content":"","date":"20 September 2024","externalUrl":null,"permalink":"/tags/web-development/","section":"Tags","summary":"","title":"Web Development","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]